# Dockerize the application and push images to Docker Hub

name: CI/CD with Semgrep, Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-secure-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#      AWS_REGION: us-east-1
#      ECS_CLUSTER: demo-cluster
#      ECS_SERVICE_PREFIX: demo-service
#      ECS_TASK_ROLE: ecsTaskExecutionRole
#      ECS_TASK_DEFINITION_FAMILY: demo-microservices

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ---------------------------
      # Step 1: Semgrep scan
      - name: Run Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"   # you can use predefined rules or your custom rules
          severity-threshold: "ERROR"
          args: "--exclude-rule python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host"

      # ---------------------------
      # Step 2: Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ---------------------------
      # Step 3: Build & Push Docker Images
      - name: Build & Push Docker Images
        run: |
          SERVICES=("cart" "inventory" "orders" "payments" "users")
          for SERVICE in "${SERVICES[@]}"; do
            echo "Building $SERVICE..."
            docker build -t $DOCKERHUB_USERNAME/$SERVICE:latest ./$SERVICE
            docker push $DOCKERHUB_USERNAME/$SERVICE:latest
          done
      # ---------------------------
